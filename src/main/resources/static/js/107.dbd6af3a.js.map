{"version":3,"file":"js/107.dbd6af3a.js","mappings":"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","sources":["webpack://light-merge-web/./node_modules/copy-to-clipboard/index.js","webpack://light-merge-web/./node_modules/toggle-selection/index.js","webpack://light-merge-web/./src/apis/merge.js","webpack://light-merge-web/./node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","webpack://light-merge-web/./node_modules/@ant-design/icons-vue/es/icons/SyncOutlined.js","webpack://light-merge-web/./src/views/merge/index.vue","webpack://light-merge-web/./src/views/merge/index.vue?24a5"],"sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import request from '@/utils/request'\n\nexport default {\n    merge(body) {\n        return request({\n          method: 'post',\n          url: '/api/merges',\n          data: body\n        })\n    },\n    checkConflicts(body) {\n      return request({\n        method: 'post',\n        url: '/api/checkConflicts',\n        data: body\n      })\n  }\n}\n\n","// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","import { createVNode as _createVNode } from \"vue\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SyncOutlined = function SyncOutlined(props, context) {\n  var p = _objectSpread({}, props, context.attrs);\n\n  return _createVNode(AntdIcon, _objectSpread({}, p, {\n    \"icon\": SyncOutlinedSvg\n  }), null);\n};\n\nSyncOutlined.displayName = 'SyncOutlined';\nSyncOutlined.inheritAttrs = false;\nexport default SyncOutlined;","<template>\n    <h1>{{projectName}}</h1>\n\n\n    <a-card class=\"swimlane\" v-for=\"swimlaneInfo,swimlaneName in swimlaneMap\" :key=\"swimlaneName\" :title=\"swimlaneName\" headStyle=\"padding: 15px;\" bodyStyle=\"padding: 15px\" style=\"margin-top: 20px;\">\n        <a-row>\n            <a-space>\n            <a-col>\n                <span style=\"font-size: 9pt;font-weight: bold;\">Merged branches  : </span>\n            </a-col>\n            <a-col>\n                <span v-for=\"branch,index in swimlaneInfo.selectedBranches\" :key=\"branch.branchName\" @click=\"copyBranchName(branch.branchName)\">\n                    <a-tag  :color=\"tagColors[index % tagColors.length]\" :bordered=\"false\" >{{ branch.branchName }}</a-tag>\n                </span>\n            </a-col>\n            </a-space>\n        </a-row>\n\n        <div style=\"margin-top: 10px;\">\n            <a-select\n                v-model:value=\"swimlaneInfo.currentBranches\"\n                mode=\"multiple\"\n                style=\"width: 100%\"\n                placeholder=\"Select Item...\"\n                :max-tag-text-length=\"maxTagTextLength\"\n                :options=\"branchOptions\"></a-select>\n        </div>\n        <div style=\"text-align: right;\">\n            <a-space style=\"margin-top: 10px;\">\n                <a-button  @click=\"onOpenCheck(swimlaneName)\">Check</a-button>\n                <a-button primary   @click=\"merge(swimlaneName)\" >Merge</a-button>\n            </a-space>\n        </div>\n        \n    </a-card>\n\n    <a-drawer\n        v-model:open=\"openCheck\"\n        class=\"custom-class\"\n        root-class-name=\"root-class-name\"\n        :root-style=\"{ color: 'blue' }\"\n        style=\"color: red\"\n        title=\"Find Conflicts\"\n        placement=\"right\"\n        @after-open-change=\"afterOpenChange\"\n    >\n            <a-select\n                v-model:value=\"checkBaseBranch\"\n                mode=\"signal\"\n                style=\"width: 100%\"\n                placeholder=\"选择基础分支\"\n                @change=\"changeCheckInput()\"\n                :status=\"checkBaseBranchInputStatus\"\n                :options=\"branchOptions\" show-search></a-select>\n            <a-select\n                v-model:value=\"checkBranches\"\n                mode=\"multiple\"\n                style=\"width: 100%;margin-top: 10px;\"\n                placeholder=\"选择比对分支\"\n                @change=\"changeCheckInput()\"\n                :status=\"checkBranchesInputStatus\"\n                :options=\"branchOptions\" show-search></a-select>\n            <div style=\"text-align: right;margin-top: 10px;\"><a-button  @click=\"checkConflicts()\" :disabled=\"checkBranchesInputStatus == 'error' || checkBaseBranchInputStatus == 'error'\">Check</a-button></div>\n\n            <div style=\"margin-top: 10px;\">\n                <div v-for=\"checkRsult in checkResult\">\n                <a-tag :color=\"checkBranchColor(checkRsult.status)\" style=\"width: 100%;margin-top: 5px;\">\n                    <template #icon>\n                        <sync-outlined :spin=\"true\" :hidden=\"checkRsult.status != 'loadding'\"/>\n                        <close-circle-outlined :hidden=\"checkRsult.status == 'loadding' || checkRsult.status == 'SUCCESS'\"/>\n                        <check-circle-outlined :hidden=\"checkRsult.status == 'loadding' || checkRsult.status != 'SUCCESS'\"/>\n                    </template>\n                    {{ checkRsult.branchName }}\n                </a-tag>\n                </div>\n            </div>\n    </a-drawer>\n\n    <a-float-button @click=\"reloadProjectInfo\" >\n        <template #icon>\n            <sync-outlined :spin=\"reloadProjectSpin[swimlaneName]\"/>\n        </template>\n    </a-float-button>\n\n</template>\n\n<script setup>\n\nimport projectApi from '@/apis/project'\nimport mergeApi from '@/apis/merge'\nimport copy from 'copy-to-clipboard';\nimport { LoadingOutlined,SyncOutlined,CheckCircleOutlined,CloseCircleOutlined  } from '@ant-design/icons-vue';\nimport { onMounted, ref,h } from 'vue';\nimport { message,notification  } from 'ant-design-vue';\n\nconst props = defineProps(['projectName'])\nconst swimlaneMap = ref({})\nconst branchList = ref([])\nconst branchOptions = ref([])\nconst tagColors = ['pink','red','orange','green','cyan','blue','purple']\nconst openCheck = ref(false)\nconst checkBaseBranch = ref('')\nconst checkBaseBranchInputStatus = ref('')\nconst checkBranchesInputStatus = ref('')\nconst checkBranches = ref([])\nconst checkResult = ref({})\nconst reloadProjectSpin = ref(false)\nconst mergeButtonLoading = ref(new Map())\n\nfunction changeCheckInput() {\n    console.log(checkBaseBranchInputStatus.value)\n    console.log(checkBranchesInputStatus.value)\n    if (checkBaseBranch.value == undefined || checkBaseBranch.value == '') {\n        checkBaseBranchInputStatus.value = 'error'\n    } else {\n        checkBaseBranchInputStatus.value = ''\n    }\n\n    if (checkBranches.value.length == 0) {\n        checkBranchesInputStatus.value = 'error';\n    } else {\n        checkBranchesInputStatus.value = '';\n    }\n}\n\nfunction merge(swimlaneName) {\n    const key = 'mergeLoading'\n\n    notification.open({\n        message: '合并中',\n        key,\n        icon: () => h(LoadingOutlined , { style: 'color: #108ee9',spin:true}),\n        duration:0\n    });\n\n    mergeButtonLoading.value[swimlaneName] = true;\n    console.log(swimlaneName + \"：\" + mergeButtonLoading.value[swimlaneName])\n\n    let mergeBranches = swimlaneMap.value[swimlaneName].currentBranches\n    let body = {\n        branchNames: mergeBranches,\n        projectName: props.projectName,\n        swimlaneName: swimlaneName\n    }\n\n    mergeApi.merge(body).then((data) => {\n        mergeButtonLoading.value[swimlaneName] = false;\n\n        mergeButtonLoading.value.set(swimlaneName, false)\n        console.log(swimlaneName + \"：\" + mergeButtonLoading.value[swimlaneName])\n        if(!data.success) {\n            notification.error({\n                message: '失败',\n                description: data.msg,\n                key,\n                duration: 0\n            });\n\n        } else {\n            notification.success({\n                message: '合并成功',\n                key,\n                duration: 3\n            });\n            reloadProjectInfo()\n        }\n\n\n    })\n\n}\n\nfunction checkBranchColor(status) {\n    switch(status) {\n        case 'SUCCESS': return 'success';\n        case 'loadding': return 'processing';\n        default : return 'error'\n    }\n}\n\nfunction onOpenCheck(branchName) {\n    checkBranches.value = swimlaneMap.value[branchName].selectedBranches.map(s => s.branchName);\n    console.log(swimlaneMap.value[branchName].selectedBranches.map(s => s.branchName))\n    checkBaseBranch.value = ''\n    openCheck.value = true\n    changeCheckInput()\n}\n\nfunction checkConflicts() {\n    if (checkBaseBranch.value == undefined || checkBaseBranch.value == '') {\n        return;\n    }\n\n    if (checkBranches.value.length == 0) {\n        return;\n    }\n\n\n    checkResult.value = checkBranches.value.map(b => {return {branchName: b,status: 'loadding'}})\n    let body = {\n        branches: checkBranches.value,\n        baseBranch: checkBaseBranch.value,\n        projectName: props.projectName\n    }\n    mergeApi.checkConflicts(body).then(function(data) {\n        console.log(data)\n\n        let result = []\n        for (let key of Object.keys(data.data)) {\n            let status =  data.data[key]\n            result.push({branchName: key, status: status})\n\n            console.log({branchName: key, status: status})\n        }\n        checkResult.value = result\n    })\n}\n\n\nfunction copyBranchName(branchName) {\n    copy(branchName);\n    message.success('分支名称已复制');\n}\n\nfunction reloadProjectInfo() {\n    reloadProjectSpin.value = true\n    projectApi.getProject(props.projectName).then(function(data) {\n        for(let key of Object.keys(data.swimlaneMap)) {\n            data.swimlaneMap[key].currentBranches = data.swimlaneMap[key].selectedBranches.map(s => s.branchName);\n            mergeButtonLoading.value[key] = false\n            console.log(mergeButtonLoading.value[key])\n        }\n\n        swimlaneMap.value = data.swimlaneMap\n        console.log(data.swimlaneMap)\n        reloadProjectSpin.value = false\n        message.success('项目信息加载成功');\n    })\n\n    projectApi.getBranchs(props.projectName).then(function(data){\n        branchList.value = data\n        console.log(data)\n        branchOptions.value = data.map(toOption)\n        console.log(data.map(toOption))\n        \n    })\n}\n\nfunction toOption(branch) {\n    console.log(branch)\n    return {\n        label: branch.branchName,\n        value: branch.branchName\n    }\n}\n\nonMounted(() => reloadProjectInfo())\n\n</script>\n\n<style>\n\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["deselectCurrent","require","clipboardToIE11Formatting","defaultMessage","format","message","copyKey","test","navigator","userAgent","replace","copy","text","options","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","successful","execCommand","Error","err","error","prompt","removeRange","removeAllRanges","removeChild","module","exports","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","merge","request","method","url","data","checkConflicts","SyncOutlined","_objectSpread","target","arguments","length","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","key","_defineProperty","obj","value","defineProperty","configurable","writable","props","context","p","attrs","_createVNode","AntdIcon","SyncOutlinedSvg","displayName","inheritAttrs","__props","swimlaneMap","ref","branchList","branchOptions","tagColors","openCheck","checkBaseBranch","checkBaseBranchInputStatus","checkBranchesInputStatus","checkBranches","checkResult","reloadProjectSpin","mergeButtonLoading","Map","changeCheckInput","log","undefined","swimlaneName","notification","open","icon","h","LoadingOutlined","spin","duration","mergeBranches","currentBranches","branchNames","projectName","mergeApi","then","set","reloadProjectInfo","description","msg","checkBranchColor","status","onOpenCheck","branchName","selectedBranches","map","s","b","branches","baseBranch","result","copyBranchName","projectApi","getProject","getBranchs","toOption","branch","label","onMounted","__exports__"],"sourceRoot":""}